{"version":3,"file":"static/js/979.2ae56497.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","some/contacts/contacts-selectors.js","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contacts_wrapper__s7EJR\",\"title\":\"Contacts_title__LxdN4\"};","// extracted by mini-css-extract-plugin\nexport default {\"mainForm\":\"ContactForm_mainForm__yOu01\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"addButton\":\"ContactForm_addButton__zGNsx\"};","import css from './ContactForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'some/contacts/contacts-operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const formSubmithandler = event => {\n    const { name, number } = event.target.elements;\n\n    event.preventDefault();\n\n    dispatch(addContact({ name: name.value, number: number.value }));\n\n    event.target.reset();\n  };\n\n  return (\n    <form className={css.mainForm} onSubmit={formSubmithandler}>\n      <div>\n        <label className={css.formLabel}>\n          Name\n          <input\n            className={css.formInput}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n      </div>\n\n      <div>\n        <label className={css.formLabel}>\n          Number\n          <input\n            className={css.formInput}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n      </div>\n\n      <button className={css.addButton} type=\"submit\">\n        {' '}\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"Filter_filterBox__A-UPt\",\"filterInput\":\"Filter_filterInput__1Cysk\",\"label\":\"Filter_label__vEd1E\"};","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\n\n\n","import css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from 'some/contacts/FilterSlice';\nimport { selectFilter } from 'some/contacts/contacts-selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const changeFilter = event => {\n    dispatch(filterContacts(event.target.value));\n  };\n\n  return (\n    <div className={css.filterBox}>\n      <label>\n        Find contacts by name\n        <br />\n        <input\n          className={css.filterInput}\n          type=\"text\"\n          name=\"filter\"\n          id=\"filter\"\n          value={filter}\n          onChange={changeFilter}\n          pattern=\"^[a-zA-ZĄąĆćĘęŁłŃńÓóŚśŹźŻż]+(([' \\-][a-zA-ZĄąĆćĘęŁłŃńÓóŚśŹźŻż])?[a-zA-ZĄąĆćĘęŁłŃńÓóŚśŹźŻż]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactList_contactsList__7leRd\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"delButton\":\"ContactList_delButton__8KTvB\"};","import css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'some/contacts/contacts-operations';\nimport { selectFilter, selectContacts } from 'some/contacts/contacts-selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul className={css.contactsList}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li className={css.contactItem} key={id}>\n          <p>{name}:</p> <span>{number}</span>{' '}\n          <button\n            className={css.delButton}\n            onClick={() => {\n              dispatch(deleteContact(id));\n            }}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import css from './Contacts.module.css';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'some/contacts/contacts-operations';\nimport { useEffect } from 'react';\nimport {\n  selectContacts,\n  selectIsLoading,\n} from 'some/contacts/contacts-selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <div className={css.wrapper}>\n        <h1 className={css.title}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={css.title}>Contacts</h2>\n        {contacts.length < 1 ? <h3>Add your first contact</h3> : <Filter />}\n\n        <ContactList />\n        {isLoading && <Loader />}\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","dispatch","useDispatch","_jsxs","className","css","onSubmit","event","_event$target$element","target","elements","name","number","preventDefault","addContact","value","reset","children","_jsx","type","pattern","title","required","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","Filter","useSelector","id","onChange","filterContacts","ContactList","filteredContacts","contact","toLowerCase","includes","map","_ref","onClick","deleteContact","useEffect","fetchContacts","length","Loader"],"sourceRoot":""}